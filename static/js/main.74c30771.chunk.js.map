{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["rgbToHex","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MASiBA,I,OCmBFC,EAzBK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxC,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAMP,EAAIQ,KAAK,KACfC,EAAQ,WAAON,GAQrB,OAPAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAGF,0BAASS,UAAS,gBAAWZ,EAAQ,IAAM,eAAiBa,MAAO,CAACC,gBAAgB,OAAD,OAAQT,EAAR,MACnFU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IAHhC,UAME,oBAAGK,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IAC3BJ,GAAS,mBAAGS,UAAU,QAAb,qC,gBC6BDO,MA/Cf,WACE,MAA0BjB,mBAAS,IAAnC,mBAAOkB,EAAP,KAAcC,EAAd,KACA,EAA0BnB,oBAAS,GAAnC,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAwBrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAA3D,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OACE,qCACA,0BAASf,UAAU,YAAnB,UACE,iDACA,uBAAMgB,SAfW,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,GACTS,QAAQC,IAAIX,KAQZ,UACE,uBAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACpEG,YAAY,UACZ1B,UAAS,UAAKU,EAAM,QAAS,QAE7B,wBAAQV,UAAU,MAAMsB,KAAK,SAA7B,0BAKJ,yBAAStB,UAAU,SAAnB,SACGc,EAAKa,KAAI,SAACnB,EAAOpB,GAEhB,OACE,cAAC,EAAD,2BAEMoB,GAFN,IAGEpB,MAAOA,EACPC,SAAUmB,EAAMoB,MAHXxC,YClCjByC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74c30771.chunk.js","sourcesContent":["function componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n  }\r\n  \r\n  function rgbToHex(r, g, b) {\r\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n  }\r\n  \r\n  export default rgbToHex;","import React, { useState, useEffect } from 'react';\r\nimport rgbToHex from './utils';\r\n\r\nconst SingleColor = ({rgb, weight, index, hexColor}) => {\r\n  const [alert, setAlert] = useState(false);\r\n  const bcg = rgb.join(',');\r\n  const hexValue = `#${hexColor}`;\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false)\r\n    }, 2000)\r\n    return () => clearTimeout(timeout)\r\n  }, [alert]);\r\n\r\n  return (\r\n    <article className={`color ${index > 10 && 'color-light'}`} style={{backgroundColor:`rgb(${bcg})`}}\r\n    onClick={() => {\r\n      setAlert(true);\r\n      navigator.clipboard.writeText(hexValue)\r\n    }}\r\n    >\r\n      <p className=\"percent-value\">{weight}%</p>\r\n      <p className=\"color-value\">{hexValue}</p>\r\n      {alert && <p className=\"alert\">copied to clipboard</p>}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default SingleColor;","import React, { useState } from 'react';\nimport SingleColor from './SingleColor';\n\nimport Values from 'values.js';\n\nfunction App() {\n  const [color, setColor] = useState('');\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#008000').all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {  \n      let colors = new Values(color).all(10)\n      setList(colors)\n    } catch (error) {\n      setError(true)\n      console.log(error);\n    }\n  }\n\n  return( \n    <>\n    <section className=\"container\">\n      <h3>color generator</h3>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)}\n        placeholder=\"#008000\"\n        className={`${error?'error': null}`}\n        />\n        <button className=\"btn\" type=\"submit\">\n          submit\n        </button>\n      </form>\n    </section>\n    <section className=\"colors\">\n      {list.map((color, index) => {\n        \n        return (\n          <SingleColor \n            key={index}\n            {...color}\n            index={index}\n            hexColor={color.hex}\n          />\n        )\n      })}\n    </section>\n    </>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}